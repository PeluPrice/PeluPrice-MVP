
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: peluprice-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://peluprice:peluprice123@db:5432/peluprice
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production
      - ENVIRONMENT=production
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    depends_on:
      - backend

  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: peluprice-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: peluprice-db
    environment:
      POSTGRES_DB: peluprice
      POSTGRES_USER: peluprice
      POSTGRES_PASSWORD: peluprice123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peluprice -d peluprice"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
